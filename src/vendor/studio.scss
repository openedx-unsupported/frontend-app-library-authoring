// Imported from:
// edx-platform/cms/static/sass/assets/_fonts.scss
@font-face {
  font-family: 'Open Sans';
  src:
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Light-webfont.woff2') format('woff2'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Light-webfont.woff') format('woff'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Light-webfont.ttf') format('truetype');
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: 'Open Sans';
  src:
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-LightItalic-webfont.woff2') format('woff2'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-LightItalic-webfont.woff') format('woff'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-LightItalic-webfont.ttf') format('truetype');
  font-weight: 300;
  font-style: italic;
}

@font-face {
  font-family: 'Open Sans';
  src:
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Regular-webfont.woff2') format('woff2'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Regular-webfont.woff') format('woff'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Regular-webfont.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: 'Open Sans';
  src:
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Italic-webfont.woff2') format('woff2'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Italic-webfont.woff') format('woff'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Italic-webfont.ttf') format('truetype');
  font-weight: 400;
  font-style: italic;
}

@font-face {
  font-family: 'Open Sans';
  src:
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Semibold-webfont.woff2') format('woff2'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Semibold-webfont.woff') format('woff'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Semibold-webfont.ttf') format('truetype');
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: 'Open Sans';
  src:
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-SemiboldItalic-webfont.woff2') format('woff2'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-SemiboldItalic-webfont.woff') format('woff'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-SemiboldItalic-webfont.ttf') format('truetype');
  font-weight: 600;
  font-style: italic;
}

@font-face {
  font-family: 'Open Sans';
  src:
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Bold-webfont.woff2') format('woff2'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Bold-webfont.woff') format('woff'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-Bold-webfont.ttf') format('truetype');
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: 'Open Sans';
  src:
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-BoldItalic-webfont.woff2') format('woff2'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-BoldItalic-webfont.woff') format('woff'),
    url('~edx-pattern-library/pattern-library/fonts/OpenSans/OpenSans-BoldItalic-webfont.ttf') format('truetype');
  font-weight: 700;
  font-style: italic;
}

// Imported from:
// edx-platform/common/static/sass/bourbon/functions/_tint-shade.scss

@function tint($color, $percent) {
  @return mix(white, $color, $percent);
}

@function shade($color, $percent) {
  @return mix(black, $color, $percent);
}

// Imported from:
// edx-platform/common/static/sass/bourbon/functions/_flex-grid.scss

@function flex-grid($columns, $container-columns: $fg-max-columns) {
  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;
  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;
  @return percentage($width / $container-width);
}

@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {
  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;
  @return percentage($gutter / $container-width);
}

// Imported from:
// edx-platform/common/static/sass/bourbon/addons/_prefixer.scss

$prefix-for-webkit:    true !default;
$prefix-for-mozilla:   true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera:     true !default;
$prefix-for-spec:      true !default; // required for keyframe mixin

@mixin prefixer ($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      @if $prefix-for-webkit {
        -webkit-#{$property}: $value;
      }
    }
    @else if $prefix == moz {
      @if $prefix-for-mozilla {
        -moz-#{$property}: $value;
      }
    }
    @else if $prefix == ms {
      @if $prefix-for-microsoft {
        -ms-#{$property}: $value;
      }
    }
    @else if $prefix == o {
      @if $prefix-for-opera {
        -o-#{$property}: $value;
      }
    }
    @else if $prefix == spec {
      @if $prefix-for-spec {
        #{$property}: $value;
      }
    }
    @else  {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}

// Imported from:
// edx-platform/common/static/sass/bourbon/css3/_animation.scss

@mixin animation ($animations...) {
  @include prefixer(animation, $animations, spec);
}

// Imported from:
// edx-platform/common/static/sass/bourbon/css3/_linear-gradient.scss

@function _linear-positions-parser($pos) {
  $type: type-of(nth($pos, 1));
  $spec: null;
  $degree: null;
  $side: null;
  $corner: null;
  $length: length($pos);
  // Parse Side and corner positions
  @if ($length > 1) {
    @if nth($pos, 1) == "to" { // Newer syntax
      $side: nth($pos, 2);

      @if $length == 2 { // eg. to top
        // Swap for backwards compatability
        $degree: _position-flipper(nth($pos, 2));
      }
      @else if $length == 3 { // eg. to top left
        $corner: nth($pos, 3);
      }
    }
    @else if $length == 2 { // Older syntax ("top left")
      $side: _position-flipper(nth($pos, 1));
      $corner: _position-flipper(nth($pos, 2));
    }

    @if ("#{$side} #{$corner}" == "left top") or ("#{$side} #{$corner}" == "top left") {
      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});
    }
    @else if ("#{$side} #{$corner}" == "right top") or ("#{$side} #{$corner}" == "top right") {
      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});
    }
    @else if ("#{$side} #{$corner}" == "right bottom") or ("#{$side} #{$corner}" == "bottom right") {
      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});
    }
    @else if ("#{$side} #{$corner}" == "left bottom") or ("#{$side} #{$corner}" == "bottom left") {
      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});
    }
    $spec: to $side $corner;
  }
  @else if $length == 1 {
    // Swap for backwards compatability
    @if $type == string {
      $degree: $pos;
      $spec: to _position-flipper($pos);
    }
    @else {
      $degree: -270 - $pos; //rotate the gradient opposite from spec
      $spec: $pos;
    }
  }
  $degree: unquote($degree + ",");
  $spec:   unquote($spec + ",");
  @return $degree $spec;
}

@mixin linear-gradient($pos, $G1, $G2: null,
                       $G3: null, $G4: null,
                       $G5: null, $G6: null,
                       $G7: null, $G8: null,
                       $G9: null, $G10: null,
                       $fallback: null) {
  // Detect what type of value exists in $pos
  $pos-type: type-of(nth($pos, 1));
  $pos-spec: null;
  $pos-degree: null;

  // If $pos is missing from mixin, reassign vars and add default position
  @if ($pos-type == color) or (nth($pos, 1) == "transparent")  {
    $G10: $G9; $G9: $G8; $G8: $G7; $G7: $G6; $G6: $G5;
     $G5: $G4; $G4: $G3; $G3: $G2; $G2: $G1; $G1: $pos;
     $pos: null;
  }

  @if $pos {
    $positions: _linear-positions-parser($pos);
    $pos-degree: nth($positions, 1);
    $pos-spec:   nth($positions, 2);
  }

  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;

  // Set $G1 as the default fallback color
  $fallback-color: nth($G1, 1);

  // If $fallback is a color use that color as the fallback color
  @if (type-of($fallback) == color) or ($fallback == "transparent") {
    $fallback-color: $fallback;
  }

  background-color: $fallback-color;
  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome

  /* Removed due to issues with the CSS optimizer. */
  // background-image: unquote("linear-gradient(#{$pos-spec}#{$full})");
}

// Imported from:
// edx-platform/lms/static/sass/partials/lms/theme/_variables-v1.scss
$uxpl-green-base: rgb(0, 129, 0) !default; // wcag2a compliant
$uxpl-green-hover-active: rgb(0, 155, 0) !default; // wcag2a compliant
$m-gray: rgb(138, 140, 143) !default; //C8F
$m-gray-l1: rgb(151, 153, 155) !default;
$m-gray-l2: rgb(164, 166, 168) !default;
$m-green: $uxpl-green-base; // uxpl green base
$m-green-d1: shade($m-green, 20%) !default;
$m-green-d2: shade($m-green, 40%) !default;
$m-green-l2: tint($m-green, 40%) !default;

// Imported from:
// edx-platform/cms/static/sass/partials/cms/theme/_variables-v1.scss
$baseline: 20px;
$gw-column: ($baseline*3);
$gw-gutter: $baseline;
$fg-max-width: 1376px;
$fg-min-width: 900px;
$fg-column: $gw-column;
$fg-gutter: $gw-gutter;
$fg-max-columns: 12;
$red: rgb(178, 6, 16) !default;  // #b20610;
$red-l1: tint($red, 20%) !default;
$black: rgb(0, 0, 0) !default;
$paleYellow: #fffcf1 !default;
$blue: rgb(0, 159, 230) !default;
$blue-l4: tint($blue, 80%) !default;
$blue-t0: rgba($blue, 0.125) !default;
$gray: rgb(127, 127, 127) !default;
$gray-d1: shade($gray, 20%) !default;
$gray-d2: shade($gray, 40%) !default;
$gray-d3: shade($gray, 60%) !default;
$gray-d4: shade($gray, 80%) !default;
$gray-l1: tint($gray, 20%) !default;
$gray-l2: tint($gray, 40%) !default;
$gray-l3: tint($gray, 60%) !default;
$gray-l4: tint($gray, 80%) !default;
$gray-l5: tint($gray, 90%) !default;
$gray-l6: tint($gray, 95%) !default;
$green: rgb(37, 184, 90) !default; // #25b85a
$green-l5: tint($green, 90%) !default;
$lightBluishGrey: rgb(197, 207, 223) !default;
$lightGrey: #edf1f5 !default;
$mediumGrey: #b0b6c2 !default;
$orange: rgb(237, 189, 60) !default;
$orange-l2: tint($orange, 40%) !default;
$orange-l5: tint($orange, 90%) !default;
$red: rgb(178, 6, 16) !default;  // #b20610;
$red-l2: tint($red, 40%) !default;
$red-l5: tint($red, 90%) !default;
$shadow: rgba($black, 0.2) !default;
$shadow-d1: rgba($black, 0.4) !default;
$shadow-l1: rgba($black, 0.1) !default;
$shadow-l2: rgba($black, 0.05) !default;
$transparent: rgba(0, 0, 0, 0) !default; // used when color value is needed for UI width/transitions but element is transparent
$uxpl-blue-hover-active: rgb(6, 86, 131) !default; // wcag2a compliant
$uxpl-green-base: rgb(0, 129, 0) !default; // wcag2a compliant
$uxpl-grayscale-x-back: rgb(245, 245, 245) !default;
$uxpl-primary-accent: rgb(14, 166, 236) !default;
$tmg-f1: 0.5s;
$tmg-f2: 0.25s;
$tmg-f3: 0.125s;
$f-sans-serif: 'Open Sans','Helvetica Neue', Helvetica, Arial, sans-serif;
$white: rgb(255, 255, 255) !default;
$white-t3: rgba($white, 0.75) !default;
$yellow: rgb(237, 189, 60) !default;
$yellow-l1: tint($yellow, 20%) !default;
$yellow-l2: tint($yellow, 40%) !default;
$yellow-l3: tint($yellow, 60%) !default;
$yellow-l4: tint($yellow, 80%) !default;
$yellow-l5: tint($yellow, 90%) !default;
$yellow-d1: shade($yellow, 20%) !default;
$yellow-d2: shade($yellow, 40%) !default;
$yellow-d3: shade($yellow, 60%) !default;
$yellow-d4: shade($yellow, 80%) !default;
$yellow-s1: saturate($yellow, 15%) !default;
$yellow-s2: saturate($yellow, 30%) !default;
$yellow-s3: saturate($yellow, 45%) !default;
$yellow-u1: desaturate($yellow, 15%) !default;
$yellow-u2: desaturate($yellow, 30%) !default;
$yellow-u3: desaturate($yellow, 45%) !default;

// Imported from:
// edx-platform/common/cms/static/sass/bootstrap/_mixins.scss

%cont-text-wrap {
  word-wrap: break-word;
}

// Imported from:
// edx-platform/common/static/sass/_mixins.scss

%cont-no-list {
  list-style: none;
  margin: 0;
  padding: 0;
  text-indent: 0;

  li {
    margin: 0;
    padding: 0;
  }
}

%ui-window {
  @include clearfix();

  border-radius: ($baseline*0.3);
  box-shadow: 0 1px 1px $shadow-l2;
  margin-bottom: $baseline;
  border: 1px solid $gray-l2;
  background: $white;
  width: 100%;

  // STATE: hover/active
  &:hover,
  &:active {
    box-shadow: 0 1px 1px $shadow;
  }
}

%ui-btn-primary {
  @extend %ui-btn;
  @extend %ui-btn-pill;
  @extend %t-strong;

  padding: ($baseline/2) $baseline;
  border-width: 1px;
  border-style: solid;
  box-shadow: none;
  line-height: 1.5em;
  text-align: center;

  &:hover,
  &:active,
  &:focus {
    box-shadow: 0 2px 1px $shadow;
  }

  &.current,
  &.active {
    box-shadow: inset 1px 1px 2px $shadow-d1;

    &:hover,
    &:active,
    &:focus {
      box-shadow: inset 1px 1px 1px $shadow-d1;
    }
  }
}

// Imported from:
// edx-platform/cms/static/sass/assets/_anims.scss

%anim-fadeIn {
  @include animation(fadeIn $tmg-f2 linear 1);
}

%anim-fadeOut {
  @include animation(fadeOut $tmg-f2 linear 1);
}

// Imported from:
// edx-platform/cms/static/sass/_mixins.scss
%ui-depth2 { z-index: 100; }
%ui-depth3 { z-index: 1000; }

%ui-disabled {
  pointer-events: none;
  outline: none;
  cursor: default;
}

%cont-truncated {
  box-sizing: border-box;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin line-height($fontSize: 16) {
  line-height: $fontSize + px;
  line-height: ($fontSize/10) + rem;
}

@mixin font-size($sizeValue: 16) {
  font-size: $sizeValue + px;
  font-size: ($sizeValue/10) + rem;
}

%cont-text-sr {
  // clip has been deprecated but is still supported
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute;
  margin: -1px;
  height: 1px;
  width: 1px;
  border: 0;
  padding: 0;
  overflow: hidden;
  // ensure there are spaces in sr text
  word-wrap: normal;
}

%ui-btn {
  box-sizing: border-box;

  @include transition(color $tmg-f2 ease-in-out 0s, border-color $tmg-f2 ease-in-out 0s, background $tmg-f2 ease-in-out 0s, box-shadow $tmg-f2 ease-in-out 0s);

  display: inline-block;
  cursor: pointer;

  &.disabled,
  &[disabled],
  &.is-disabled {
    cursor: default;
    pointer-events: none;
    border: 1px solid $gray-l3;
    background-color: $gray-l3;
    color: $gray-l5;
  }

  .icon-inline {
    display: inline-block;
    vertical-align: middle;
    margin-right: ($baseline/4);
  }
}

%ui-btn-pill {
  border-radius: ($baseline/5);
}

%ui-fake-link {
  cursor: pointer;
}

// Imported from:
// edx-platform/cms/static/sass/elements/_typography.scss
%t-regular {
  font-weight: 400;
}

%t-copy {
  font-family: $f-sans-serif;
}

%t-copy-base {
  @extend %t-copy;

  @include font-size(14);
  @include line-height(24);
}

%t-copy-sub1 {
  @extend %t-copy;

  @include font-size(14);
  @include line-height(14);
}

%t-copy-sub2 {
  @extend %t-copy;

  @include font-size(12);
  @include line-height(12);
}

%t-demi-strong {
  font-weight: 500;
}

%t-title {
  font-family: $f-sans-serif;
}

%t-title1 {
  @extend %t-title;

  @include font-size(40);
  @include line-height(50);
}

%t-title2 {
  @extend %t-title;

  @include font-size(32);
  @include line-height(40);
}

%t-title3 {
  @include font-size(22);
  @include line-height(27);
}

%t-title4 {
  @extend %t-title;

  @include font-size(18);
  @include line-height(22);
}

%t-title5 {
  @extend %t-title;

  @include font-size(14);
  @include line-height(17);
}

%t-title6 {
  @extend %t-title;

  @include font-size(12);
  @include line-height(15);
}

%t-title7 {
  @extend %t-title;

  @include font-size(14);
  @include line-height(18);
}

%t-title8 {
  @extend %t-title;

  @include font-size(12);
  @include line-height(16);
}

%t-title9 {
  @extend %t-title;

  @include font-size(11);
  @include line-height(15);
}

%t-action1 {
  @include font-size(18);
  @include line-height(22);
}

%t-action2 {
  @include font-size(16);
  @include line-height(20);
}

%t-action3 {
  @include font-size(14);
  @include line-height(18);
}

%t-action4 {
  @include font-size(12);
  @include line-height(16);
}

%t-action5 {
  @include font-size(10);
  @include line-height(14);
}

%t-strong {
  font-weight: 600;
}

%t-bold {
  font-weight: 700;
}

%t-weight3 {
  font-weight: 500;
}

// Imported from:
// edx-platform/cms/static/sass/elements/_controls.scss
%btn {
  box-sizing: border-box;

  @include transition(color $tmg-f2 ease-in-out, background $tmg-f2 ease-in-out, box-shadow $tmg-f2 ease-in-out);

  display: inline-block;
  cursor: pointer;
  text-decoration: none;

  &:hover,
  &:active,
  &:focus {
    text-decoration: none;
  }

  &.disabled,
  &[disabled] {
    cursor: default;
    pointer-events: none;
  }
}

%btn-edged {
  border-radius: ($baseline/10);
}

%btn-primary-blue {
  @extend %ui-btn-primary;

  background: theme-color("primary");
  border-color: theme-color("primary");
  color: theme-color("inverse");

  &:hover,
  &:active {
    background: $uxpl-blue-hover-active;
    border-color: $uxpl-blue-hover-active;
  }

  &.current,
  &.active {
    background: $uxpl-blue-hover-active;
    border-color: $uxpl-blue-hover-active;
    color: $blue-l4;

    &:hover,
    &:active {
      background: $uxpl-blue-hover-active;
    }
  }
}
%ui-btn-dd {
  @extend %ui-btn;
  @extend %ui-btn-pill;

  padding: ($baseline/4) ($baseline/2);
  border-width: 1px;
  border-style: solid;
  border-color: transparent;
  text-align: center;

  &:hover,
  &:active {
    @extend %ui-fake-link;

    border-color: $gray-l3;
  }

  &.current,
  &.active,
  &.is-selected {
    box-shadow: inset 0 1px 2px 1px $shadow-l1;
    border-color: $gray-l3;
  }
}

%ui-btn-dd-nav-primary {
  @extend %ui-btn-dd;

  background: $white;
  border-color: $white;
  color: $gray-d1;

  &:hover,
  &:active {
    background: $white;
    color: $uxpl-blue-hover-active;
  }

  &.current,
  &.active {
    background: $white;
    color: $gray-d4;

    &:hover,
    &:active {
      color: $uxpl-blue-hover-active;
    }
  }
}

%btn-primary {
  @extend %t-weight3;
  @extend %btn;
  @extend %btn-edged;

  border: none;
  padding: ($baseline*0.75) $baseline;
  text-align: center;
  text-shadow: none;

  &.disabled,
  &.is-disabled,
  &[disabled] {
    background: $m-gray-l2;
    color: $white-t3;
  }
}

%btn-primary-green {
  @extend %btn-primary;

  box-shadow: 0 2px 1px 0 $m-green-d2;
  background: $m-green-d1;
  color: $white;

  &:hover,
  &:active,
  &:focus {
    background: $uxpl-green-hover-active;
    color: $white;
  }

  &.current,
  &.active {
    box-shadow: inset 0 2px 1px 1px $m-green;
    background: $m-green-l2;
    color: $m-green;

    &:hover,
    &:active,
    &:focus {
      box-shadow: inset 0 2px 1px 1px $m-green-d1;
      color: $m-green-d1;
    }
  }

  &.disabled,
  &[disabled] {
    box-shadow: none;
  }
}

.form-create-alert {
  margin-top: ($baseline*1.6);
  padding: ($baseline*1.2);

  .alert-icon {
    width: 2.4rem;
    height: 2.4rem;
  }

  .alert-message-content {
    @include font-size(14);

    margin-bottom: ($baseline*0.4);
  }

  .alert-heading {
    @include font-size(18);
    @include line-height(24);
  }
}

.pgn__breadcrumb {
  @include font-size(18);
  @include line-height(24);

  margin: ($baseline*2.2) 0 ($baseline*2);

  .pgn__icon {
    width: 2.4rem;
    height: 2.4rem;
  }
}

// Imported from:
// edx-platform/cms/static/sass/elements/_forms.scss
.form-create {
  @extend %ui-window;

  margin-top: ($baseline*2);

  .content-primary & {
    margin-top: 0;
  }

  .title {
    @extend %t-title4;
    @extend %t-strong;

    padding: $baseline ($baseline*1.5) 0 ($baseline*1.5);
  }

  fieldset {
    padding: ($baseline*2.15) ($baseline*2) $baseline;
  }

  .list-input {
    @extend %cont-no-list;

    .field {
      margin: 0 0 ($baseline*1.9) 0;

      &:last-child {
        margin-bottom: 0;
      }

      &.required {
        label {
          @extend %t-strong;
        }

        label::after {
          margin-left: ($baseline/4);
          content: "*";
        }
      }

      label,
      input,
      textarea {
        display: block;
      }

      label {
        @extend %t-copy-sub1;

        margin: 0 0 ($baseline/4) 0;

        &.is-focused {
          color: $blue;
        }
      }


      input,
      textarea {
        @extend %t-copy-base;

        @include transition(all $tmg-f2 ease-in-out 0s);

        &.long {
          width: 100%;
        }

        &.short {
          width: 25%;
        }

        &:focus {
          + .text-muted {
            color: $gray-d1;
          }
        }
      }

      textarea.long {
        height: ($baseline*5);
      }

      input[type="checkbox"] {
        display: inline-block;
        margin-right: ($baseline/4);
        width: auto;
        height: auto;

        & + label {
          display: inline-block;
        }
      }

      .text-muted, .invalid-feedback {
        @extend %t-copy-sub2;

        @include transition(color 0.15s ease-in-out);


        display: block;
        margin-top: ($baseline/4);
        color: $gray-d1;
      }

      .tip-note {
        display: block;
        margin-top: ($baseline/4);
      }

      .tip-error {
        display: none;
        float: none;
      }

      .invalid-feedback {
        color: $red;

        &::before {
          vertical-align: unset;
        }
      }

      &.error {
        label {
          color: $red;
        }

        .is-showing {
          @extend %anim-fadeIn;
        }

        .is-hiding {
          @extend %anim-fadeOut;
        }

        .tip-error {
          display: block;
          color: $red;
        }

        input {
          border-color: $red;
        }
      }
    }

    .library-create-wrapper & .form-control {
      padding: ($baseline*0.5) ($baseline*0.75);
      height: ($baseline*2.2);
    }

    .field-inline {
      input,
      textarea,
      select {
        width: 62%;
        display: inline-block;
      }

      .tip-stacked {
        display: inline-block;
        float: right;
        width: 35%;
        margin-top: 0;
      }
    }

    .field-group {
      @include clearfix();

      margin: 0 0 ($baseline/2) 0;

      .field {
        display: block;
        width: 47%;
        border-bottom: none;
        margin: 0 ($baseline*0.75) 0 0;
        padding: ($baseline/4) 0 0 0;
        float: left;
        position: relative;

        &:nth-child(odd) {
          float: left;
        }

        &:nth-child(even) {
          float: right;
          margin-right: 0;
        }

        input,
        textarea {
          width: 100%;
        }
      }
    }
  }

  .pgn__form-control-description {
    @include font-size(11);
    @include line-height(22);

    .pgn__icon {
      display: none;
    }
  }

  .actions {
    padding: ($baseline*0.5) ($baseline*2) $baseline;
    text-align: right;

    .action {
      @include transition(all $tmg-f2 linear 0s);
      @include font-size(18);
      @include line-height(18);

      @extend %t-weight3;

      display: inline-block;
      padding: ($baseline*0.6) ($baseline*0.75);
      margin-left: 1rem;
    }
  }
}

// Imported from:
// edx-platform/cms/static/sass/vendor/bi-app/_mixins.scss
$bi-app-direction       : ltr;
$bi-app-left            : left;
$bi-app-right           : right;

@mixin bi-app-compact($property, $top, $right, $bottom, $left) {
  @if $bi-app-direction == ltr {
    #{$property}: $top $right $bottom $left;
  }

  @else {
    #{$property}: $top $left $bottom $right;
  }
}

@mixin margin-left($distance) {
  margin-#{$bi-app-left}: $distance;
}

@mixin margin-right($distance) {
  margin-#{$bi-app-right}: $distance;
}

@mixin margin($top, $right, $bottom, $left) {
  @include bi-app-compact(margin, $top, $right, $bottom, $left);
}

@mixin margin-right($distance) {
  margin-#{$bi-app-right}: $distance;
}

@mixin bi-app-float-left {
  float: $bi-app-left;
}

@mixin bi-app-float-right {
  float: $bi-app-right;
}

@mixin float($direction) {
  @if $direction == left {
    @include bi-app-float-left;
  }

  @else if $direction == right {
    @include bi-app-float-right;
  }

  @else {
    float: $direction;
  }
}

@mixin bi-app-text-align-left {
  text-align: $bi-app-left;
}

@mixin bi-app-text-align-right {
  text-align: $bi-app-right;
}

@mixin text-align($direction) {
  @if $direction == left {
    @include bi-app-text-align-left;
  }

  @else if $direction == right {
    @include bi-app-text-align-right;
  }

  @else {
    text-align: $direction;
  }
}

@mixin border-right($border-style) {
  border-#{$bi-app-right}: $border-style;
}

// Imported from:
// edx-platform/cms/static/sass/_base.scss
html {
  font-size: 62.5%;
  height: 100%; // force scrollbar to prevent jump when scroll appears, cannot use overflow because it breaks drag
}

body {
  @extend %t-copy-base;

  min-width: $fg-min-width;
  color: $gray-d3;
  height: 100%;
}

#root {
  height: 100%;

  > .wrapper {
    height: 100%;
    display: flex;
    flex-direction: column;
  }
}

body,
input,
button {
  font-family: $f-sans-serif;
}

.page-header {
  @extend %t-title2;
  @extend %t-bold;

  display: block;

  .navigation,
  .subtitle {
    @extend %t-title7;
    @extend %t-regular;

    position: relative;
    top: ($baseline/4);
    display: block;
    color: $gray-d2;
  }
}

.wrapper {
  @include clearfix();

  box-sizing: border-box;
  width: 100%;
}

.wrapper-mast {
  margin: ($baseline*2) 0 0 0;
  padding: 0;
  position: relative;

  .mast,
  .metadata {
    @include clearfix();

    position: relative;
    max-width: $fg-max-width;
    min-width: $fg-min-width;
    width: flex-grid(12);
    margin: $baseline auto $baseline auto;
    color: $gray-d2;
  }

  .mast {
    padding-bottom: ($baseline/2);

    // layout without actions
    .page-header {
      @extend %t-bold;

      font-family: $f-sans-serif;
      width: flex-grid(12);
    }

    // layout with actions
    &.has-actions {
      @include clearfix();

      .page-header {
        @include float(left);

        width: flex-grid(6, 12);

        @include margin-right(flex-gutter());

        .page-header-title {
          @extend %t-title4;
          @extend %t-strong;

          margin: 12px 0;
        }
      }

      .nav-actions {
        position: relative;

        @include float(right);

        width: flex-grid(6, 12);

        @include text-align(right);
        .nav-list {
          margin-top: ($baseline/1.5);
        }
        .nav-item {
          display: inline-block;
          vertical-align: top;
          line-height: 1.776rem;

          button {
            font-size: 1.2rem;
            font-weight: 600;

            svg {
              width: 2rem;
            }
          }

          @include margin-right(($baseline/2));

          &:last-child {
            @include margin-right(0);
          }
        }
      }
    }
  }
}

.wrapper-content {
  margin: 0;
  padding: 0;
  position: relative;
}

main {
  flex: 1 0 auto;
}

.content {
  @include clearfix();

  @extend %t-copy-base;

  display: flex;
  max-width: $fg-max-width;
  min-width: $fg-min-width;
  width: flex-grid(12);
  margin: 0 auto;
  color: $gray-d2;

  header {
    position: relative;
    margin-bottom: $baseline;
    border-bottom: 1px solid $gray-l4;
    padding-bottom: ($baseline/2);

    .title-sub {
      @extend %t-copy-sub1;

      display: block;
      margin: 0;
      color: $gray-l2;
    }

    .title-1 {
      @extend %t-title3;

      margin: 0;
      padding: 0;
      font-weight: 600;
      color: $gray-d3;
    }
  }
}

.content-primary,
.content-supplementary {
  box-sizing: border-box;
}

.content-primary {
  flex: 0 0 100%;
  width: 100%;
  margin-right: 2.12%;

  .title-1 {
    @extend %t-title3;
  }

  .title-2 {
    @extend %t-title4;

    margin: 0 0 ($baseline/2) 0;
  }

  .title-3 {
    @extend %t-title6;

    margin: 0 0 ($baseline/2) 0;
  }

  header {
    @include clearfix();

    .title-2 {
      width: flex-grid(5, 12);
      margin: 0 flex-gutter() 0 0;
      float: left;
    }

    .tip {
      @extend %t-copy-sub2;

      @include text-align(right);
      @include float(right);

      width: flex-grid(7, 12);
      margin-top: ($baseline/2);
      color: $gray-d1;
    }
  }
}

.content-supplementary {
  flex: 0 0 25%;
  max-width: 25%;

  .bit {
    @extend %t-copy-sub1;

    margin: 0 0 $baseline 0;
    border-bottom: 1px solid $gray-l4;
    padding: 0 0 $baseline 0;
    color: $gray-d1;

    &:last-child {
      margin-bottom: 0;
      border: none;
      padding-bottom: 0;
    }

    h3 {
      @extend %t-title7;
      @extend %t-strong;

      margin: 0 0 ($baseline/4) 0;
      color: $gray-d2;
    }

    p {
      line-height: 20.7167px;
    }

    .list-actions {
      list-style: none;
      padding: 0;

      a {
        color: #0075b4;
      }
    }
  }
}

// Imported from:
// edx-platform/cms/static/sass/_mixins-inherited.scss
@mixin button {
  @include transition(background-color 0.15s, box-shadow 0.15s);

  @extend %t-action3;
  @extend %t-strong;

  box-shadow: 0 1px 0 rgba(255, 255, 255, 0.3) inset, 0 0 0 $transparent;
  display: inline-block;
  padding: ($baseline/5) $baseline ($baseline/4);

  &.disabled,
  &.is-disabled {
    border: 1px solid $gray-l1 !important;
    border-radius: 3px !important;
    background: $gray-l1 !important;
    color: $gray-d1 !important;
    pointer-events: none;
    cursor: none;

    &:hover,
    &:focus {
      box-shadow: 0 0 0 0 !important;
    }
  }

  &:hover,
  &:focus,
  &:active {
    box-shadow: 0 1px 0 rgba(255, 255, 255, 0.3) inset, 0 1px 1px rgba(0, 0, 0, 0.15);
  }
}

@mixin white-button {
  @include button;
  @include linear-gradient(top, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0));

  box-shadow: 0 1px 0 rgba(255, 255, 255, 0.3) inset;
  border: 1px solid $mediumGrey;
  border-radius: 3px;
  background-color: #dfe5eb;
  color: rgb(92, 103, 122);
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);

  &:hover,
  &:focus {
    background-color: rgb(222, 236, 247);
    color: rgb(92, 103, 122);
  }
}

@mixin active {
  @include linear-gradient(top, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0));

  box-shadow: 0 -1px 0 $shadow inset, 0 1px 0 $white inset;
  background-color: rgba(255, 255, 255, 0.3);
  text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
}

// Imported from:
// edx-platform/cms/static/sass/elements/_modules.scss
.add-xblock-component {
  margin: $baseline ($baseline/2);
  border: 1px solid $gray-l3;
  border-radius: ($baseline/4);
  box-shadow: 0 1px 3px $shadow inset;
  background-color: $gray-l5;
  padding: ($baseline/2);

  // add component menu inner wrapper
  .new-component {
    text-align: center;

    h5 {
      @extend %t-title5;
      @extend %t-strong;

      margin-bottom: ($baseline*0.75);
      color: $uxpl-green-base;
    }

    // add component - list of green buttons
    .new-component-type {
      @include clearfix();

      li {
        display: inline-block;
      }

      // green button
      .add-xblock-component-button {
        @extend %t-action3;

        @include margin-right($baseline*0.75);

        position: relative;
        display: inline-block;
        width: ($baseline*5);
        height: ($baseline*5);
        margin-bottom: ($baseline/2);
        box-shadow: 0 1px 1px $shadow, 0 1px 0 rgba(255, 255, 255, 0.4) inset;
        border-radius: ($baseline/4);
        padding: 0;
        text-align: center;

        @extend %btn-primary-green;

        .name {
          box-sizing: border-box;
          display: block;
          color: $white;
        }
      }
    }
  }

  // outer most wrapper div for scroll up component picker menus
  // swaps in when a green button is clicked
  // --------------------
  .new-component-templates {
    @include clearfix();

    display: none;
    margin: $baseline ($baseline*2);
    border-radius: 3px;
    border: 1px solid $mediumGrey;
    background-color: $white;
    box-shadow: 0 1px 1px $shadow, 0 1px 0 rgba(255, 255, 255, 0.4) inset;

    .cancel-button {
      @include white-button;
      @include margin($baseline, 0, ($baseline/2), ($baseline/2));
    }

    .problem-type-tabs {
      display: none;
    }

    // specific menu types
    &.new-component-problem {
      .problem-type-tabs {
        display: inline-block;
      }
    }

    .support-documentation {
      float: right;

      @include margin($baseline, 0, ($baseline/2), ($baseline/2));
      @include font-size(14);

      .support-documentation-level {
        padding-right: ($baseline/2);
      }

      .support-documentation-link {
        // Override JQuery ui-widget-content link color (black) with our usual link color and hover action.
        color: theme-color("primary");
        text-decoration: none;
        padding-right: ($baseline/2);

        &:hover {
          color: $uxpl-blue-hover-active;
          text-decoration: underline;
        }
      }
    }

    .support-level {
      padding-right: ($baseline/2);
    }

    .icon {
      color: $uxpl-primary-accent;
    }
  }

  // individual menus
  // --------------------
  .new-component-template {
    @include clearfix();

    margin-bottom: 0;

    li {
      border: none;
      border-bottom: 1px dashed $lightGrey;

      &:first-child {
        border-radius: 3px 3px 0 0;
      }
    }

    .button-component {
      @include clearfix();
      @include transition(none);

      @extend %t-demi-strong;

      display: block;
      width: 100%;
      border: 0;
      padding: 7px $baseline;
      background: $white;
      color: $gray-d3;
      text-align: left;
      font-family: $f-sans-serif;

      &:hover {
        @include transition(background-color $tmg-f2 linear 0s);

        background: tint($green, 30%);
        color: $white;

        .icon {
          color: $white;
        }
      }
    }
  }

  // basic and advanced problem tabs - also handled by jquery-ui tabs
  // --------------------
  .problem-type-tabs {
    @include linear-gradient(top, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0));

    list-style-type: none;
    width: 100%;
    border-radius: 0;
    background-color: $lightBluishGrey;
    box-shadow: 0 1px 0 rgba(255, 255, 255, 0.2) inset, 0 -1px 0 $shadow inset;

    li:first-child {
      @include margin-left($baseline);
    }

    li {
      @include linear-gradient(top, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0));

      opacity: 0.8;

      @include float(left);

      display: inline-block;
      width: auto;
      box-shadow: 0 1px 0 rgba(255, 255, 255, 0.2) inset, 0 -1px 0 $shadow inset;
      background-color: tint($lightBluishGrey, 10%);
      text-align: center;

      &:hover {
        opacity: 0.9;
        background-color: tint($lightBluishGrey, 20%);
      }

      &.ui-state-active {
        @include active;

        border: 0;
        opacity: 1;
      }

      // reset to remove jquery-ui float
      a.link-tab {
        float: none;
      }
    }

    a {
      @extend %t-action3;

      display: block;
      padding: ($baseline*0.75) ($baseline*1.25);
      text-align: center;
      color: $gray-d3;
      text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
    }
  }
}

%bar-module {
  margin-bottom: $baseline;
  border-top: 5px solid $gray-l1;
  background-color: $white;

  .bar-mod-title {
    @extend %t-title6;
    @extend %t-strong;

    display: block;
    padding: ($baseline/2) ($baseline*0.75);
    background-color: $gray-l4;
  }

  .bar-mod-content {
    @extend %t-copy-sub1;

    border-bottom: 1px solid $gray-l4;
    padding: ($baseline*0.75) ($baseline*0.75) $baseline ($baseline*0.75);

    .title {
      @extend %t-title8;
      @extend %t-strong;

      margin-bottom: ($baseline/4);
      color: $gray-d2;
      text-transform: uppercase;
    }

    .meta {
      @extend %t-copy-sub2;

      color: $gray-d2;
    }
  }
}

%bar-module-blue {
  @extend %bar-module;

  border-top: 5px solid $blue;

  .bar-mod-title {
    background-color: $blue-t0;
  }
}

%bar-module-green {
  @extend %bar-module;

  border-top: 5px solid $green;

  .bar-mod-title {
    background-color: $green-l5;
  }
}

%bar-module-yellow {
  @extend %bar-module;

  border-top: 5px solid $orange-l2;

  .bar-mod-title {
    background-color: $orange-l5;
  }
}

%bar-module-red {
  @extend %bar-module;

  border-top: 5px solid $red-l2;

  .bar-mod-title {
    background-color: $red-l5;
  }
}

%bar-module-black {
  @extend %bar-module;

  border-top: 5px solid $black;

  .bar-mod-title {
    background-color: $gray-l4;
  }
}

// Imported from:
// edx-platform/cms/static/sass/views/_container.scss

%status-value-base {
  @extend %t-title7;
  @extend %t-strong;
}

%status-value-sub1 {
  @extend %t-title8;

  display: block;
}

.content-supplementary {
  .bit-publishing {
    @extend %bar-module;

    // CASE: content is ready to be made live
    &.is-ready {
      @extend %bar-module-green;
    }

    // CASE: content is live
    &.is-live {
      @extend %bar-module-blue;
    }

    // CASE: content has warnings
    &.has-warnings {
      @extend %bar-module-yellow;
    }

    // CASE: content has erors
    &.has-errors {
      @extend %bar-module-red;
    }

    // CASE: content is staff only
    &.staff-only,
    &.is-staff-only {
      @extend %bar-module-black;

      &.is-scheduled .wrapper-release .copy {
        text-decoration: line-through;
      }
    }

    // CASE: content is gated
    &.is-gated {
      @extend %bar-module-black;
    }

    .bar-mod-content {
      border: 0;
      padding: ($baseline/2) ($baseline*0.75) ($baseline/4) ($baseline*0.75);

      .title {
        margin-bottom: ($baseline/10);
      }
    }

    .wrapper-last-draft {
      .date,
      .user {
        @extend %t-strong;
      }

      .user {
        @extend %cont-text-wrap;
      }
    }

    .wrapper-release {
      .release-date {
        @extend %status-value-base;
      }

      .release-with {
        @extend %status-value-sub1;
      }
    }

    .wrapper-visibility {
      .copy {
        @extend %status-value-base;

        margin-bottom: ($baseline/10);
      }

      .icon {
        color: $gray-d1;
      }

      .inherited-from {
        @extend %status-value-sub1;
      }

      // UI: note about specific access
      .note-visibility {
        @extend %status-value-sub1;

        .icon {
          @include margin-right($baseline/4);
        }
      }
    }

    .wrapper-pub-actions {
      border-top: 1px solid $gray-l4;
      margin-top: ($baseline/2);
      padding: $baseline ($baseline*0.75) ($baseline*0.75) ($baseline*0.75);

      .action-publish {
        @extend %btn-primary-blue;

        display: block;
        padding: ($baseline/4) ($baseline/2) ($baseline/3) ($baseline/2);
      }

      .action-discard {
        @extend %t-copy-sub1;

        display: block;
        margin-top: ($baseline/2);
        text-align: right;

        &.is-disabled {
          pointer-events: none;
          color: $gray-l1;
        }
      }
    }
  }
}

.dropdown-group-wrapper {
  position: relative;

  .pgn__form-control-decorator-trailing {
    @include font-size(22);

    .btn-icon.btn-icon-sm {
      width: 3.6rem;
      height: 3.6rem;
    }

    .pgn__icon.btn-icon__icon {
      height: 2.4rem;
      width: 2.4rem;
    }
  }
}

.dropdown-container {
  @include pgn-box-shadow(1, 'centered');

  border-radius: ($baseline*0.2);
  max-height: 200px;
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.25rem;
  overflow-y: scroll;
  position: absolute;
  background-color: $white;
  width: 100%;
  z-index: 100 !important;

  .dropdown-item {
    @include font-size(16);
    @include line-height(20);

    padding: ($baseline*0.5) ($baseline*0.8);
  }
}

.wrapper .list-inline-item:not(:last-child) {
  margin-right: 0.3rem;
}
